'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _semanticUiReact = require('semantic-ui-react');

var _routes = require('../../../routes');

var _Layout = require('../../../components/Layout');

var _Layout2 = _interopRequireDefault(_Layout);

var _campaign = require('../../../ethereum/campaign');

var _campaign2 = _interopRequireDefault(_campaign);

var _RequestRow = require('../../../components/RequestRow');

var _RequestRow2 = _interopRequireDefault(_RequestRow);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _jsxFileName = 'E:\\workspaces12\\kickstarter-blockchain-exam\\pages\\campaigns\\requests\\index.js?entry';


var RequestIndex = function (_Component) {
    (0, _inherits3.default)(RequestIndex, _Component);

    function RequestIndex() {
        (0, _classCallCheck3.default)(this, RequestIndex);

        return (0, _possibleConstructorReturn3.default)(this, (RequestIndex.__proto__ || (0, _getPrototypeOf2.default)(RequestIndex)).apply(this, arguments));
    }

    (0, _createClass3.default)(RequestIndex, [{
        key: 'renderRow',
        value: function renderRow() {
            var _this2 = this;

            return this.props.requests.map(function (request, index) {
                return _react2.default.createElement(_RequestRow2.default, {
                    key: index,
                    id: index,
                    request: request,
                    address: _this2.props.address,
                    approversCount: _this2.props.approversCount,
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 28
                    }
                });
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var Header = _semanticUiReact.Table.Header,
                Row = _semanticUiReact.Table.Row,
                HeaderCell = _semanticUiReact.Table.HeaderCell,
                Body = _semanticUiReact.Table.Body;

            return _react2.default.createElement(_Layout2.default, {
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 42
                }
            }, _react2.default.createElement('h3', {
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 43
                }
            }, 'Requests'), _react2.default.createElement(_routes.Link, { route: '/campaigns/' + this.props.address + '/requests/new', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 46
                }
            }, _react2.default.createElement('a', {
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 47
                }
            }, _react2.default.createElement(_semanticUiReact.Button, { primary: true, floated: 'right', style: { marginBottom: 10 }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 48
                }
            }, 'Add Request'))), _react2.default.createElement(_semanticUiReact.Table, {
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 51
                }
            }, _react2.default.createElement(Header, {
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 52
                }
            }, _react2.default.createElement(Row, {
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 53
                }
            }, _react2.default.createElement(HeaderCell, {
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 54
                }
            }, 'ID'), _react2.default.createElement(HeaderCell, {
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 55
                }
            }, 'Description'), _react2.default.createElement(HeaderCell, {
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 56
                }
            }, 'Amount'), _react2.default.createElement(HeaderCell, {
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 57
                }
            }, 'Recipient'), _react2.default.createElement(HeaderCell, {
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 58
                }
            }, 'Apprival Count'), _react2.default.createElement(HeaderCell, {
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 59
                }
            }, 'Approve'), _react2.default.createElement(HeaderCell, {
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 60
                }
            }, 'Finalize'))), _react2.default.createElement(Body, {
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 63
                }
            }, this.renderRow())), _react2.default.createElement('div', {
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 67
                }
            }, 'Found ', this.props.requestCount, ' requests.'));
        }
    }], [{
        key: 'getInitialProps',
        value: function () {
            var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(props) {
                var address, campaign, requestCount, approversCount, requests;
                return _regenerator2.default.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                address = props.query.address;
                                campaign = (0, _campaign2.default)(address);
                                _context.next = 4;
                                return campaign.methods.getRequestsCount().call();

                            case 4:
                                requestCount = _context.sent;
                                _context.next = 7;
                                return campaign.methods.approversCount().call();

                            case 7:
                                approversCount = _context.sent;
                                _context.next = 10;
                                return _promise2.default.all(Array(parseInt(requestCount)).fill().map(function (element, index) {
                                    return campaign.methods.requests(index).call();
                                }));

                            case 10:
                                requests = _context.sent;
                                return _context.abrupt('return', { address: address, requests: requests, requestCount: requestCount, approversCount: approversCount });

                            case 12:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function getInitialProps(_x) {
                return _ref.apply(this, arguments);
            }

            return getInitialProps;
        }()
    }]);

    return RequestIndex;
}(_react.Component);

exports.default = RequestIndex;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVua25vd24iXSwibmFtZXMiOlsiX2pzeEZpbGVOYW1lIiwiUmVxdWVzdEluZGV4IiwiX0NvbXBvbmVudCIsIl9fcHJvdG9fXyIsImFwcGx5IiwiYXJndW1lbnRzIiwia2V5IiwidmFsdWUiLCJyZW5kZXJSb3ciLCJfdGhpczIiLCJwcm9wcyIsInJlcXVlc3RzIiwibWFwIiwicmVxdWVzdCIsImluZGV4IiwiY3JlYXRlRWxlbWVudCIsImlkIiwiYWRkcmVzcyIsImFwcHJvdmVyc0NvdW50IiwiX19zb3VyY2UiLCJmaWxlTmFtZSIsImxpbmVOdW1iZXIiLCJyZW5kZXIiLCJIZWFkZXIiLCJSb3ciLCJIZWFkZXJDZWxsIiwiQm9keSIsInJvdXRlIiwicHJpbWFyeSIsImZsb2F0ZWQiLCJzdHlsZSIsIm1hcmdpbkJvdHRvbSIsInJlcXVlc3RDb3VudCIsIl9yZWYiLCJtYXJrIiwiX2NhbGxlZSIsImNhbXBhaWduIiwid3JhcCIsIl9jYWxsZWUkIiwiX2NvbnRleHQiLCJwcmV2IiwibmV4dCIsInF1ZXJ5IiwibWV0aG9kcyIsImdldFJlcXVlc3RzQ291bnQiLCJjYWxsIiwic2VudCIsImFsbCIsIkFycmF5IiwicGFyc2VJbnQiLCJmaWxsIiwiZWxlbWVudCIsImFicnVwdCIsInN0b3AiLCJnZXRJbml0aWFsUHJvcHMiLCJfeCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUVBOzs7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7Ozs7QUFOQSxJQUFJQSxlQUFlLDJGQUFuQjs7O0FBUUEsSUFBSUMsZUFBZSxVQUFVQyxVQUFWLEVBQXNCO0FBQ3JDLDRCQUFVRCxZQUFWLEVBQXdCQyxVQUF4Qjs7QUFFQSxhQUFTRCxZQUFULEdBQXdCO0FBQ3BCLHNDQUFnQixJQUFoQixFQUFzQkEsWUFBdEI7O0FBRUEsZUFBTyx5Q0FBMkIsSUFBM0IsRUFB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